// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dense.proto

package dense

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ImageData struct {
	PostId               string   `protobuf:"bytes,1,opt,name=postId,proto3" json:"postId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageData) Reset()         { *m = ImageData{} }
func (m *ImageData) String() string { return proto.CompactTextString(m) }
func (*ImageData) ProtoMessage()    {}
func (*ImageData) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ffe1c9366ce3a3c, []int{0}
}

func (m *ImageData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageData.Unmarshal(m, b)
}
func (m *ImageData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageData.Marshal(b, m, deterministic)
}
func (m *ImageData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageData.Merge(m, src)
}
func (m *ImageData) XXX_Size() int {
	return xxx_messageInfo_ImageData.Size(m)
}
func (m *ImageData) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageData.DiscardUnknown(m)
}

var xxx_messageInfo_ImageData proto.InternalMessageInfo

func (m *ImageData) GetPostId() string {
	if m != nil {
		return m.PostId
	}
	return ""
}

type Response struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Next                 bool     `protobuf:"varint,3,opt,name=next,proto3" json:"next,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ffe1c9366ce3a3c, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Response) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Response) GetNext() bool {
	if m != nil {
		return m.Next
	}
	return false
}

func init() {
	proto.RegisterType((*ImageData)(nil), "dense.ImageData")
	proto.RegisterType((*Response)(nil), "dense.Response")
}

func init() { proto.RegisterFile("dense.proto", fileDescriptor_1ffe1c9366ce3a3c) }

var fileDescriptor_1ffe1c9366ce3a3c = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x49, 0xcd, 0x2b,
	0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0x94, 0xb9, 0x38, 0x3d,
	0x73, 0x13, 0xd3, 0x53, 0x5d, 0x12, 0x4b, 0x12, 0x85, 0xc4, 0xb8, 0xd8, 0x0a, 0xf2, 0x8b, 0x4b,
	0x3c, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xa0, 0x3c, 0x25, 0x3f, 0x2e, 0x8e, 0xa0,
	0xd4, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x09, 0x2e, 0xf6, 0xdc, 0xd4, 0xe2, 0xe2, 0xc4,
	0xf4, 0x54, 0xa8, 0x22, 0x18, 0x57, 0x48, 0x84, 0x8b, 0x35, 0xb5, 0xa8, 0x28, 0xbf, 0x48, 0x82,
	0x09, 0x2c, 0x0e, 0xe1, 0x08, 0x09, 0x71, 0xb1, 0xe4, 0xa5, 0x56, 0x94, 0x48, 0x30, 0x2b, 0x30,
	0x6a, 0x70, 0x04, 0x81, 0xd9, 0x46, 0x6b, 0x18, 0xb9, 0xd8, 0x03, 0x8a, 0x52, 0x53, 0x32, 0x93,
	0x4b, 0x84, 0x8c, 0xb9, 0x78, 0x0a, 0x20, 0xcc, 0xf8, 0xbc, 0xe2, 0xb4, 0x72, 0x21, 0x01, 0x3d,
	0x88, 0x2b, 0xe1, 0xae, 0x92, 0xe2, 0x87, 0x8a, 0xc0, 0x9c, 0xa0, 0xc4, 0x80, 0xac, 0x29, 0x27,
	0x3f, 0x3d, 0x9f, 0x38, 0x4d, 0xe6, 0x5c, 0x02, 0x30, 0x4d, 0x05, 0x99, 0x05, 0xa9, 0x39, 0x99,
	0x79, 0xa9, 0x44, 0x69, 0x4c, 0x62, 0x03, 0x87, 0x98, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x6e,
	0x2a, 0x5e, 0x57, 0x40, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PredictClient is the client API for Predict service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PredictClient interface {
	PredictNsfw(ctx context.Context, in *ImageData, opts ...grpc.CallOption) (*Response, error)
	PredictLogo(ctx context.Context, in *ImageData, opts ...grpc.CallOption) (*Response, error)
	PredictPipeline(ctx context.Context, in *ImageData, opts ...grpc.CallOption) (*Response, error)
}

type predictClient struct {
	cc *grpc.ClientConn
}

func NewPredictClient(cc *grpc.ClientConn) PredictClient {
	return &predictClient{cc}
}

func (c *predictClient) PredictNsfw(ctx context.Context, in *ImageData, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/dense.Predict/predict_nsfw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *predictClient) PredictLogo(ctx context.Context, in *ImageData, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/dense.Predict/predict_logo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *predictClient) PredictPipeline(ctx context.Context, in *ImageData, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/dense.Predict/predict_pipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PredictServer is the server API for Predict service.
type PredictServer interface {
	PredictNsfw(context.Context, *ImageData) (*Response, error)
	PredictLogo(context.Context, *ImageData) (*Response, error)
	PredictPipeline(context.Context, *ImageData) (*Response, error)
}

// UnimplementedPredictServer can be embedded to have forward compatible implementations.
type UnimplementedPredictServer struct {
}

func (*UnimplementedPredictServer) PredictNsfw(ctx context.Context, req *ImageData) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PredictNsfw not implemented")
}
func (*UnimplementedPredictServer) PredictLogo(ctx context.Context, req *ImageData) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PredictLogo not implemented")
}
func (*UnimplementedPredictServer) PredictPipeline(ctx context.Context, req *ImageData) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PredictPipeline not implemented")
}

func RegisterPredictServer(s *grpc.Server, srv PredictServer) {
	s.RegisterService(&_Predict_serviceDesc, srv)
}

func _Predict_PredictNsfw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PredictServer).PredictNsfw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dense.Predict/PredictNsfw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PredictServer).PredictNsfw(ctx, req.(*ImageData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Predict_PredictLogo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PredictServer).PredictLogo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dense.Predict/PredictLogo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PredictServer).PredictLogo(ctx, req.(*ImageData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Predict_PredictPipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PredictServer).PredictPipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dense.Predict/PredictPipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PredictServer).PredictPipeline(ctx, req.(*ImageData))
	}
	return interceptor(ctx, in, info, handler)
}

var _Predict_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dense.Predict",
	HandlerType: (*PredictServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "predict_nsfw",
			Handler:    _Predict_PredictNsfw_Handler,
		},
		{
			MethodName: "predict_logo",
			Handler:    _Predict_PredictLogo_Handler,
		},
		{
			MethodName: "predict_pipeline",
			Handler:    _Predict_PredictPipeline_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dense.proto",
}
